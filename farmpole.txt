                                 uses SysUtils, Classes, RegExpr;

var                              
      
       
  SafePoint: array of integer = [-11384, -248646, -8160];  // "??????????" ????? - ???? ???????? ??? ??????
  BuffID: integer = 1040;         // ID ????, ?? ???????? ????????? ????????????? ??????
  RebuffTime: cardinal = 300000;   // ????? ?? ????????? ???? ??? ?????? (? ??)
  AltB: array of string = ['09', '01'];  // ??????? ??? ????

procedure AltB_Rebuff_Thread();
var X, Y, Z: integer;
begin
  while delay(555) do begin
    if (BuffTime(BuffID) < RebuffTime) then begin
      Engine.Msg('[Rebuff]', '???? ??????????, ?????? ? ?????????? ?????', 0);
      // ????????????? ??????????? ????????, ???????? ???????? ?????? ?????? ??? ???-?? ???
      // ???? ?????? ????? ??? ??????? ????? ???? ???? ?????, ??????? ????? ?? ???,
      // ?????? ??? ?????? ? ?????????? ?????, ?? ??????????????? ??? ????
      {if (HaveAgroMobs) then begin
        Engine.Msg('[Rebuff]', '????????? ?? ?????', 128);
        while (HaveAgroMobs) do delay(555);
        Engine.FaceControl(1, true);
      end; }
      X:= User.X;
      Y:= User.Y;
      Z:= User.Z;
      Engine.FaceControl(1, false);
      Engine.Msg('[Rebuff]', '???????? ???? ??????????: ['+IntToStr(X)+', '+IntToStr(Y)+', '+IntToStr(Z)+']', 0);
          // ????? ? ?????????? ?????
      Delay(1000);
      if (HaveAgroMobs) then begin                                                     // ???? ?? ??? ????? ???? ????, ??
        Engine.Msg('[Rebuff]', 'Aggro mobs', 128);
        Engine.FaceControl(1, true);                                                   // ???????? ?????????
        while (HaveAgroMobs) do delay(555);                                            // ???? ???? ???? ???? - ????
        Engine.FaceControl(1, false);                                                  // ????????? ?????????
        while (User.InCombat) do delay(555);                                           // ???? ?????? ?? ???
      end;

      repeat BuffAltB();                                          // ?????????? ?? ??? ???
      until (BuffTime(BuffID) > RebuffTime);                      // ???? ????? ???? ?? ?????? ?????? ??????????
      //Engine.MoveTo(X, Y, Z);                                     // ???????????? ? ??????????, ??????? ?????????? ????? ?????
      Engine.FaceControl(1, true);                                // ???????? ??????? ????????? ? ?????????? ????

    end;
  end;
end;

// https://adrenalinebot.com/ru/api/example/buff-time-check
function BuffTime(ID: integer): cardinal;
var i: integer;
begin
  result:= 0;
  for i:= 0 to User.Buffs.Count-1 do begin        // ????????? ?? ?????? ????? ?????
    if (User.Buffs.Items(i).id = ID) then begin   // ???? ID ??????, ??
      result:= User.Buffs.Items(i).EndTime;       // ?????????? ? ????????? ????? ?? ????????? ????
      break;
    end;
  end;
end;




function Bypass(dlg: integer): boolean;
var
  RegExp: TRegExpr;
  SL: TStringList;
  i: integer;
  bps: string;
begin
  Result:= true;                                            // set the default result
  RegExp:= TRegExpr.Create;                                 // initialize objects for further work
  SL:= TStringList.Create;
  
  RegExp.Expression:= '(<a *(.+?)</a>)|(<button *(.+?)>)';  // set regexp to search for all possible bypasses
  if RegExp.Exec(Engine.CbText) then                       // if you found the desired pattern, then
    repeat SL.Add(RegExp.Match[0]);                         // fill our list with such matches
    until (not RegExp.ExecNext);                            // until the patterns run out

                       // now go over our list
                   // if the i-th line contains the required text, then
      RegExp.Expression:= '"bypass *(.+?)"';             // look for a text template with bypass
      if RegExp.Exec(SL[ dlg ]) then                          // and if found, then copy from it a piece of interest to us
        bps:= TrimLeft(Copy(RegExp.Match[0], 9, Length(RegExp.Match[0])-9));
  

  
  Print(bps);                                               // print out the final bypass
  if (Length(bps) > 0) then Engine.BypassToServer(bps);     // if its length is > 0, then send to server
  
  RegExp.Free;                                              // do not forget to free up memory
  SL.Free;
end;

procedure BuffAltB();
begin
if(not User.Dead and not User.InCombat) then begin
            Engine.MoveTo(128421, -5132, -3160);
            
        
      delay(1200);
     Engine.UseItem(25000);
     delay(1200);
Engine.BypassToServer('08');
    delay(1200);
  Engine.BypassToServer('01');
  delay(1200);

  end;
end;

function HaveAgroMobs(): boolean;                 // ??????? ?????????, ????? ?? ?? ??? ????????
var i: integer;
begin
  result:= false;
  for i:= 0 to NpcList.Count-1 do begin
    if (IsAgr(NpcList(i))) then begin
      result:= true;
      exit;
    end;
  end;
end;

function IsAgr(Mob: TL2Npc): boolean;
begin
  result:= (Mob.AtkOID = User.OID) and (not Mob.Dead);
end;

begin
  Script.NewThread(@AltB_Rebuff_Thread);
  // ??? ????? ???? ?????????????? ??? ???? ???
  Delay(-1);
end.